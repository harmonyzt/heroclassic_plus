/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <hamsandwich>
#include <fun>
#include <csx>
#include <dhudmessage>

#define PLUGIN "TFCS"
#define VERSION "1.0"
#define AUTHOR "andrey"

new bool:crits[32]=false
new bool:mini_crits[32]=false
new kills[32]
new iMaxPlayers
new bool:always_crit_win[32]=false
new bool:no_damage[32]
new g_friend[32]

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	RegisterHam( Ham_TakeDamage, "player", "TakeDamage")	//Ðåã Ïîëó÷åíèÿ óðîíà
	register_logevent( "Start", 2, "1=Round_Start" );		//ñòàðò ðàóíäà
	iMaxPlayers=get_maxplayers()
	register_dictionary("tf2.txt")
	register_event("SendAudio", "tt", "a", "2&%!MRAD_terwin") 	//ÐŸÐ¾Ð±ÐµÐ´Ð° Ñ‚ÐµÑ€Ð¾Ð²
	register_event("SendAudio", "ct", "a", "2&%!MRAD_ctwin")	//ÐŸÐ¾Ð±ÐµÐ´Ð° ÐšÑ‚
	register_event("StatusValue", "setTeam", "be", "1=1")
}
public Start(){
	for(new id = 1; id <= 32; id++)
	{
		if(is_user_alive(id) && is_user_connected(id))
		{
			remove_task(id)
			client_cmd(id,"stopsound")
			set_user_health(id,300)	
			always_crit_win[id]=false
			crits[id]=false
			no_damage[id]=false
			new chance=20
			if(chance>random_num(1,40)){
			set_task(random_float(1.0,6.5),"GO_GO_GO",id)	
			}
		}
	}
}
public GO_GO_GO(id){
new randomm=random_num(1,47)
switch(randomm){
	case 1:emit_sound(id,CHAN_STATIC,"tfcs/go1.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)	
	case 2:emit_sound(id,CHAN_STATIC,"tfcs/go2.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 3:emit_sound(id,CHAN_STATIC,"tfcs/go3.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 4:emit_sound(id,CHAN_STATIC,"tfcs/go4.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 5:emit_sound(id,CHAN_STATIC,"tfcs/go5.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 6:emit_sound(id,CHAN_STATIC,"tfcs/go6.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 7:emit_sound(id,CHAN_STATIC,"tfcs/go7.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 8:emit_sound(id,CHAN_STATIC,"tfcs/go8.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 9:emit_sound(id,CHAN_STATIC,"tfcs/go9.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 10:emit_sound(id,CHAN_STATIC,"tfcs/go10.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 11:emit_sound(id,CHAN_STATIC,"tfcs/go11.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 12:emit_sound(id,CHAN_STATIC,"tfcs/go12.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 13:emit_sound(id,CHAN_STATIC,"tfcs/go13.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 14:emit_sound(id,CHAN_STATIC,"tfcs/go14.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 15:emit_sound(id,CHAN_STATIC,"tfcs/go15.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 16:emit_sound(id,CHAN_STATIC,"tfcs/go16.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 17:emit_sound(id,CHAN_STATIC,"tfcs/go17.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 18:emit_sound(id,CHAN_STATIC,"tfcs/go18.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 19:emit_sound(id,CHAN_STATIC,"tfcs/go19.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 20:emit_sound(id,CHAN_STATIC,"tfcs/go20.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 21:emit_sound(id,CHAN_STATIC,"tfcs/go21.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 22:emit_sound(id,CHAN_STATIC,"tfcs/go22.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 23:emit_sound(id,CHAN_STATIC,"tfcs/go23.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 24:emit_sound(id,CHAN_STATIC,"tfcs/go24.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 25:emit_sound(id,CHAN_STATIC,"tfcs/go25.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 26:{	
	}
	case 27:emit_sound(id,CHAN_STATIC,"tfcs/go27.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 28:emit_sound(id,CHAN_STATIC,"tfcs/go28.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 29:emit_sound(id,CHAN_STATIC,"tfcs/go29.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 30:emit_sound(id,CHAN_STATIC,"tfcs/go30.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 31:emit_sound(id,CHAN_STATIC,"tfcs/go31.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 32:emit_sound(id,CHAN_STATIC,"tfcs/go32.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 33:emit_sound(id,CHAN_STATIC,"tfcs/go33.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 34:emit_sound(id,CHAN_STATIC,"tfcs/go34.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 35:emit_sound(id,CHAN_STATIC,"tfcs/go35.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 36:emit_sound(id,CHAN_STATIC,"tfcs/go36.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 37:emit_sound(id,CHAN_STATIC,"tfcs/go37.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 38:emit_sound(id,CHAN_STATIC,"tfcs/go38.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 39:emit_sound(id,CHAN_STATIC,"tfcs/go39.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 40:emit_sound(id,CHAN_STATIC,"tfcs/go40.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 41:emit_sound(id,CHAN_STATIC,"tfcs/go41.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 42:emit_sound(id,CHAN_STATIC,"tfcs/go42.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 43:emit_sound(id,CHAN_STATIC,"tfcs/go43.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 44:emit_sound(id,CHAN_STATIC,"tfcs/go44.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 45:emit_sound(id,CHAN_STATIC,"tfcs/go45.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 46:emit_sound(id,CHAN_STATIC,"tfcs/go46.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 47:emit_sound(id,CHAN_STATIC,"tfcs/go47.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
}
}

public TakeDamage( victim, inflictor, attacker, Float:damage, damagebits){
if(no_damage[attacker]==true)
	return HAM_IGNORED
if(!is_user_connected(attacker))
	return HAM_IGNORED;
if (pev_valid(victim) != 2)
	return HAM_IGNORED;


new Float:crit_chance=10.0
if(crit_chance>random_float(6.5,60.0) && crits[attacker] != true && mini_crits[attacker] != true && always_crit_win[attacker]!=true){//CRIT OR MINI_CRIT
//MINI_CRIT SYSTEM
if(get_user_weapon(attacker)==CSW_AK47 || get_user_weapon(attacker) == CSW_M4A1 || get_user_weapon(attacker) == CSW_DEAGLE || get_user_weapon(attacker) == CSW_AWP && mini_crits[attacker] != true && always_crit_win[attacker]!=true){		//mini crits to ak m4 deagle
	
	SetHamParamFloat(4,damage * random_float(1.2,1.4))//Mini damage crit
	
	mini_crits[attacker]=true	//player gives mini_crit
	
	set_task(0.2,"DeSet",attacker)	//delete mini-crit
	
	new randomm=random_num(1,4)
	switch(randomm){
	case 1:{
	client_cmd(attacker,"spk tfcs/mini_crit1")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
	case 2:{
	client_cmd(attacker,"spk tfcs/mini_crit2")
	client_cmd(victim,"spk tfcs/crit_vic2")
	}
	case 3:{
	client_cmd(attacker,"spk tfcs/mini_crit3")
	client_cmd(victim,"spk tfcs/crit_vic3")
	}
	case 4:{
	client_cmd(attacker,"spk tfcs/mini_crit4")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
}
	//MINI-CRIT FADE SCREEN
	message_begin(MSG_ONE, get_user_msgid("ScreenFade"), {0,0,0}, victim)
	write_short(1<<10)
	write_short(1<<10)
	write_short(0x0000)
	write_byte(200)
	write_byte(0)
	write_byte(30)
	write_byte(75)
	message_end()

	return PLUGIN_CONTINUE
}
//CRIT FADE SCREEN
message_begin(MSG_ONE, get_user_msgid("ScreenFade"), {0,0,0}, victim)
write_short(1<<10)
write_short(1<<10)
write_short(0x0000)
write_byte(230)
write_byte(0)
write_byte(0)
write_byte(75)
message_end()

crits[attacker]=true	//set crit time

set_task(0.2,"DeSet",attacker)	//delete crit

SetHamParamFloat(4,damage * random_float(1.4,2.0))	//crit damage

new randomm=random_num(1,4)
switch(randomm){
	case 1:{
	client_cmd(attacker,"spk tfcs/crit1")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
	case 2:{
	client_cmd(attacker,"spk tfcs/crit2")
	client_cmd(victim,"spk tfcs/crit_vic2")
	}
	case 3:{
	client_cmd(attacker,"spk tfcs/crit3")
	client_cmd(victim,"spk tfcs/crit_vic3")
	}
	case 4:{
	client_cmd(attacker,"spk tfcs/crit4")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
}
}


//ÅÑËÈ ÁÎÌÁÓ ÇÀËÎÆÈËÈ ÁÅÑÊ. ÊÐÈÒÛ ÄÎ ÊÎÍÖÀ ÐÀÓÍÄÀ
if(always_crit_win[attacker]==true){
	
SetHamParamFloat(4,damage * 2.0)

new randomm=random_num(1,4)
switch(randomm){
	case 1:{
	client_cmd(attacker,"spk tfcs/crit1")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
	case 2:{
	client_cmd(attacker,"spk tfcs/crit2")
	client_cmd(victim,"spk tfcs/crit_vic2")
	}
	case 3:{
	client_cmd(attacker,"spk tfcs/crit3")
	client_cmd(victim,"spk tfcs/crit_vic3")
	}
	case 4:{
	client_cmd(attacker,"spk tfcs/crit4")
	client_cmd(victim,"spk tfcs/crit_vic1")
	}
}
}
//ÏÐÎÂÅÐßÅÌ ÏÐÀÂÒËÜÍÎ ËÈ ÁÓÄÅÒ ÐÀÁÎÒÀÒÜ ÇÂÓÊ ÏÎÏÀÄÀÍÈß
if(always_crit_win[attacker]==true || crits[attacker]==true || mini_crits[attacker]==true && g_friend[victim]!=1)
	return HAM_IGNORED

client_cmd(attacker,"spk tfcs/hit")
return HAM_IGNORED
}

//***************************
//ÎÏÐÅÄÅËÅÍÈÅ ÄÐÓÃ ÝÒÎ ÈËÈ ÍÅÒ
//***************************
public setTeam(id)
g_friend[id] = read_data(2)
//***************************
//ÑÌÅÐÒÜ ÈÃÐÎÊÀ
//***************************
public client_death(killer,victim,wpindex,hitplace,TK){

if(crits[killer]==true || always_crit_win[killer]==true && mini_crits[killer]==false){
	new name_k[32],name_v[32]
	get_user_name(killer,name_k,31)
	get_user_name(victim,name_v,31)
	color_print(0,"%L",LANG_PLAYER,"KILL_CRIT",name_k,name_v)	
}

if(mini_crits[killer]==true && crits[killer]==false){
	new name_k[32],name_v[32]
	get_user_name(killer,name_k,31)
	get_user_name(victim,name_v,31)
	color_print(0,"%L",LANG_PLAYER,"KILL_MINI_CRIT",name_k,name_v)		
}
always_crit_win[victim]=false
crits[victim]=false
remove_task(victim)

kills[killer]++
kills[victim]=0
kills[victim]=0
new name[32];get_user_name(killer,name,31)

//***************************
//ÑÒÅÏÅÍÈ ÓÁÈÉÑÒÂ
//***************************
if(kills[killer]==5){
	client_cmd(killer,"spk tfcs/kill_streak")
	set_dhudmessage(255, 127, 42, -1.0, 0.15, 1, 6.0, 4.0)
	show_dhudmessage(0, "%L",LANG_PLAYER,"TF_5",name)
}

if(kills[killer]==10){
	client_cmd(killer,"spk tfcs/kill_streak")
	set_dhudmessage(255, 127, 42, -1.0, 0.15, 1, 6.0, 4.0)
	show_dhudmessage(0, "%L",LANG_PLAYER,"TF_10",name)
}

if(kills[killer]==15){
	client_cmd(killer,"spk tfcs/kill_streak")
	set_dhudmessage(255, 127, 42, -1.0, 0.15, 1, 6.0, 4.0)
	show_dhudmessage(0, "%L",LANG_PLAYER,"TF_15",name)
}

if(kills[killer]==20){
	client_cmd(killer,"spk tfcs/kill_streak")
	set_dhudmessage(255, 127, 42, -1.0, 0.15, 1, 6.0, 4.0)
	show_dhudmessage(0, "%L",LANG_PLAYER,"TF_20",name)
}
if(kills[killer]==25){
	client_cmd(killer,"spk tfcs/kill_streak")
	set_dhudmessage(255, 127, 42, -1.0, 0.15, 1, 6.0, 4.0)
	show_dhudmessage(0, "%L",LANG_PLAYER,"TF_25",name)
}

//****************************************************
//ÅÑËÈ ÓÁÈË Ñ ÀÂÏ ÈËÈ ÑÊÀÓÒÀ, ÒÎ ÏÐÎÈÃÐÛÂÀÅÌ ÍÀÑÌÅØÊÓ
//****************************************************
if(get_user_weapon(killer)==CSW_AWP || get_user_weapon(killer)==CSW_SCOUT){
new chance=20
if(chance>random_num(0,60))
set_task(1.7,"Laugh_Sniper",killer)
}
}

//***************************
//ÍÀÑÌÅØÊÈ ÑÍÀÉÏÅÐÀ
//***************************
public Laugh_Sniper(id){

new randomm=random_num(1,10)
switch(randomm){
	case 1:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh1.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)	
	case 2:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh2.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 3:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh3.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 4:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh4.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 5:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh5.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 6:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh6.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 7:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh7.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 8:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh8.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 9:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh9.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
	case 10:emit_sound(id,CHAN_STATIC,"tfcs/sniper_laugh10.wav",VOL_NORM,ATTN_NORM,0,PITCH_NORM)
}
}
//***************************
//ÄÅÉÑÒÂÈß Ñ ÁÎÌÁÎÉ
//***************************
public bomb_planted(planter){
new winners[32],num
get_players(winners,num,"ea","TERRORIST")
for (new i=0; i<num; i++){
always_crit_win[winners[i]]=true
set_task(1.0,"sound_CRIT",winners[i])
}
}

public bomb_defused(defuser){
for (new i=0; i<32; i++){
always_crit_win[i]=false
}
new winners[32],num,loosers[32],t_num
get_players(winners,num,"ea","CT")
get_players(winners,num,"ea","TERRORIST")
//Ó ïðîèãðàâøèõ òåðîâ îòíèìàþòñÿ êðèòû
for (new i=0; i<t_num; i++){
remove_task(loosers[i])
always_crit_win[loosers[i]]=false
client_cmd(loosers[i],"stopsound")
}

for (new i=0; i<num; i++){
always_crit_win[winners[i]]=true
set_task(1.0,"sound_CRIT",winners[i])
}
}
//***************************
//ÂÎÇÂÐÀÙÅÍÈÅ ÇÂÓÊÎÂ ÊÐÈÒÀ
//***************************
public sound_CRIT(id){
client_cmd(id,"spk tfcs/crit_power2")
set_task(8.0,"sound_CRIT",id)
}

//**********************************
//ÇÀÊÎÍ×ÅÍÎ ÂÎÇÂÐÀÙÅÍÈÅ ÇÂÓÊÎÂ ÊÐÈÒÀ
//**********************************

//***************************
//ÖÂÅÒÍÎÉ ×ÀÒ
//***************************
stock color_print(id, const text[], any:...) {
	new message[128];
	vformat(message, charsmax(message), text, 3);
	
	replace_all(message, charsmax(message), "!g", "^x04");
	replace_all(message, charsmax(message), "!n", "^x01");
	replace_all(message, charsmax(message), "!t", "^x03");
	
	switch(id) {
		case 0: for(new i = 1; i <= iMaxPlayers; i++) {
			if(is_user_connected(i)) {
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, i);
				write_byte(i);
				write_string(message);
				message_end();
			}
		}
		default: if(is_user_connected(id)) {
			message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, id);
			write_byte(id);
			write_string(message);
			message_end();
		}
	}
}


public ct(){
new cts[32],count_ct,ts[32],count_tt

get_players(cts,count_ct,"e","CT")
get_players(ts,count_tt,"e","TERRORIST")

for(new i,id; i < count_tt; i++){
id=ts[i]
strip_user_weapons(id)
set_hudmessage(255, 85, 85, -1.0, 0.7, 0, 12.0, 7.0, 0.5, 0.5, 5)
show_hudmessage(id, "%L",LANG_PLAYER,"LOSE")
always_crit_win[id]=false
no_damage[id]=true
client_cmd(id,"spk tfcs/lose")
}

for(new i,id; i < count_ct; i++){
id=cts[i]
set_hudmessage(85, 85, 255, -1.0, 0.7, 0, 12.0, 7.0, 0.5, 0.5, 5)
show_hudmessage(id, "%L",LANG_PLAYER,"WIN")
always_crit_win[id]=true
set_task(1.0,"sound_CRIT",id)
client_cmd(id,"spk tfcs/win")
}
}

public tt(){
new cts[32],count_ct,ts[32],count_tt

get_players(cts,count_ct,"e","CT")
get_players(ts,count_tt,"e","TERRORIST")

for(new i,id; i < count_ct; i++){
id=cts[i]
strip_user_weapons(id)
set_hudmessage(255, 85, 85, -1.0, 0.7, 0, 12.0, 7.0, 0.5, 0.5, 5)
show_hudmessage(id, "%L",LANG_PLAYER,"LOSE")
always_crit_win[id]=false
no_damage[id]=true
client_cmd(id,"spk tfcs/lose")
}

for(new i,id; i < count_tt; i++){
id=ts[i]
set_hudmessage(85, 85, 255, -1.0, 0.7, 0, 12.0, 7.0, 0.5, 0.5, 5)
show_hudmessage(id, "%L",LANG_PLAYER,"WIN")
always_crit_win[id]=true
set_task(1.0,"sound_CRIT",id)
client_cmd(id,"spk tfcs/win")
}
}



public plugin_precache(){
precache_sound("tfcs/m4_crit.wav")
precache_sound("tfcs/crit_power2.wav")	
precache_sound("tfcs/hit.wav")	
precache_sound("tfcs/crit1.wav")	
precache_sound("tfcs/crit2.wav")	
precache_sound("tfcs/crit3.wav")	
precache_sound("tfcs/crit4.wav")	
precache_sound("tfcs/crit_vic1.wav")
precache_sound("tfcs/crit_vic2.wav")	
precache_sound("tfcs/crit_vic3.wav")
precache_sound("tfcs/mini_crit1.wav")
precache_sound("tfcs/mini_crit2.wav")
precache_sound("tfcs/mini_crit3.wav")
precache_sound("tfcs/mini_crit4.wav")
precache_sound("tfcs/sniper_laugh1.wav")
precache_sound("tfcs/sniper_laugh2.wav")
precache_sound("tfcs/sniper_laugh3.wav")
precache_sound("tfcs/sniper_laugh4.wav")
precache_sound("tfcs/sniper_laugh5.wav")
precache_sound("tfcs/sniper_laugh6.wav")
precache_sound("tfcs/sniper_laugh7.wav")
precache_sound("tfcs/sniper_laugh8.wav")
precache_sound("tfcs/sniper_laugh9.wav")
precache_sound("tfcs/sniper_laugh10.wav")
precache_sound("tfcs/go1.wav")
precache_sound("tfcs/go2.wav")
precache_sound("tfcs/go3.wav")
precache_sound("tfcs/go4.wav")
precache_sound("tfcs/go5.wav")
precache_sound("tfcs/go6.wav")
precache_sound("tfcs/go7.wav")
precache_sound("tfcs/go8.wav")
precache_sound("tfcs/go9.wav")
precache_sound("tfcs/go10.wav")
precache_sound("tfcs/go11.wav")
precache_sound("tfcs/go12.wav")
precache_sound("tfcs/go13.wav")
precache_sound("tfcs/go14.wav")
precache_sound("tfcs/go15.wav")
precache_sound("tfcs/go16.wav")
precache_sound("tfcs/go17.wav")
precache_sound("tfcs/go18.wav")
precache_sound("tfcs/go19.wav")
precache_sound("tfcs/go20.wav")
precache_sound("tfcs/go21.wav")
precache_sound("tfcs/go22.wav")
precache_sound("tfcs/go23.wav")
precache_sound("tfcs/go24.wav")
precache_sound("tfcs/go25.wav")
precache_sound("tfcs/go27.wav")
precache_sound("tfcs/go28.wav")
precache_sound("tfcs/go29.wav")
precache_sound("tfcs/go30.wav")
precache_sound("tfcs/go31.wav")
precache_sound("tfcs/go32.wav")
precache_sound("tfcs/go33.wav")
precache_sound("tfcs/go34.wav")
precache_sound("tfcs/go35.wav")
precache_sound("tfcs/go36.wav")
precache_sound("tfcs/go37.wav")
precache_sound("tfcs/go38.wav")
precache_sound("tfcs/go39.wav")
precache_sound("tfcs/go40.wav")
precache_sound("tfcs/go41.wav")
precache_sound("tfcs/go42.wav")
precache_sound("tfcs/go43.wav")
precache_sound("tfcs/go44.wav")
precache_sound("tfcs/go45.wav")
precache_sound("tfcs/go46.wav")
precache_sound("tfcs/go47.wav")
precache_sound("tfcs/win.wav")
precache_sound("tfcs/lose.wav")
precache_sound("tfcs/kill_streak.wav")
}


public DeSet(id){
crits[id]=false
mini_crits[id]=false
}
